library("manipulate", lib.loc="~/R/win-library/3.1")
library("rstudio", lib.loc="~/R/win-library/3.1")
install.packages("manipulate")
library("boot", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("class", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("grid", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("methods", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("nnet", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("splines", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("stats", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("survival", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("tools", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("translations", lib.loc="C:/Program Files/R/R-3.1.3/library")
library("utils", lib.loc="C:/Program Files/R/R-3.1.3/library")
install.packages("devtools")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(devtools)
install.packages("Rtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
install.packages("manipulate")
install.packages("ada", "AnnotationDbi")
install.packages("ada"
, "AnnotationDbi"
, "assertthat"
, "base64enc"
, "BatchJobs"
, "BBmisc"
, "BH"
, "Biobase"
, "BiocGenerics"
, "BiocInstaller"
, "BiocParallel"
, "biomaRt"
, "Biostrings"
, "bitops"
, "BradleyTerry2"
, "brew"
, "brglm"
, "BSgenome"
)
install.packages("biomaRt")
install.packages("brglm")
install.packages("ada")
install.packages("AnnotationDbi")
install.packages("assertthat")
install.packages("base64enc")
install.packages("BatchJobs")
install.packages("BBmisc")
install.packages("BH")
install.packages("Biobase")
install.packages("BiocGenerics")
install.packages("BiocInstaller")
install.packages("BiocParallel")
install.packages("biomaRt")
install.packages("Biostrings")
install.packages("bitops")
install.packages("BradleyTerry2")
install.packages("bitops")
install.packages("car")
install.packages("caret")
install.packages("ChangeAnomalyDetection")
install.packages("checkmate")
install.packages("class")
install.packages("clue")
install.packages("cluster")
install.packages("codetools")
install.packages("colorspace")
install.packages("compiler")
install.packages("CORElearn")
install.packages("datasets")
install.packages("ChangeAnomalyDetection")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("boot")
install.packages("DBI")
install.packages("devtools")
install.packages("dichromat")
install.packages("digest")
install.packages("dplyr")
install.packages("e1071")
install.packages("ElemStatLearn")
install.packages("evaluate")
install.packages("fail")
install.packages("foreach")
install.packages("evaluate")
install.packages("evaluate")
install.packages("evaluate")
install.packages("ggplot2")
install.packages("glmnet")
install.packages("graphics")
install.packages("grDevices")
install.packages("grid")
install.packages("grplasso")
install.packages("graphics")
install.packages("graphics")
install.packages("ipred")
install.packages("IRanges")
install.packages("ISLR")
install.packages("iterators")
install.packages("jsonlite")
install.packages("kernlab")
install.packages("KernSmooth")
install.packages("knitr")
install.packages("labeling")
install.packages("Lahman")
install.packages("lasso2")
install.packages("lattice")
install.packages("lme4")
install.packages("knitr")
install.packages("knitr")
install.packages("logicReg")
install.packages("magrittr")
install.packages("makeslides")
install.packages("manipulate")
install.packages("maptree")
install.packages("MASS")
install.packages("Matrix")
install.packages("mboost")
install.packages("memoise")
install.packages("methods")
install.packages("mgcv")
install.packages("minga")
install.packages("munsell")
install.packages("mvpart")
install.packages("neuralnet")
install.packages("methods")
install.packages("methods")
install.packages("nlme")
install.packages("nloptr")
install.packages("nnet")
install.packages("outliers")
install.packages("parallel")
install.packages("plyr")
install.packages("profileModel")
install.packages("proto")
install.packages("randomForest")
install.packages("rattle")
install.packages("RColorBrewer")
install.packages("Rcpp")
install.packages("RcppEigen")
install.packages("RCurl")
install.packages("reshape2")
install.packages("rgenoud")
install.packages("rgp")
install.packages("rminer")
install.packages("ROCR")
install.packages("RoughSets")
install.packages("rpart")
install.packages("RSamtools")
install.packages("RSQLite")
install.packages("rtracklayer")
install.packages("scales")
install.packages("sendmailR")
install.packages("slidify")
install.packages("spatial")
install.packages("slidify")
install.packages("slidify")
install.packages("stats")
install.packages("stats4")
install.packages("stringr")
install.packages("survival")
install.packages("svmpath")
install.packages("swirl")
install.packages("tcltk")
install.packages("testthat")
install.packages("tgp")
install.packages("tools")
install.packages("translations")
install.packages("tree")
install.packages("UsingR")
install.packages("utils")
install.packages("whisker")
install.packages("stats")
install.packages("stringr")
install.packages("tools")
install.packages("utils")
install.packages("whisker")
install.packages("stats")
install.packages("stringr")
install.packages("tools")
install.packages("stringr")
install.packages("tools")
install.packages("tools")
install.packages("translations")
install.packages("tree")
install.packages("UsingR")
install.packages("utils")
install.packages("whisker")
install.packages("utils")
install.packages("whisker")
install.packages("XML")
install.packages("XVector")
install.packages("yaml")
install.packages("zlibbioc")
install.packages("zoo")
install.packages("yaml")
installed.packages
installed.packages()
install.packages("AnnotationDbi")
install.packages("Biobase")
install.packages("BiocGenerics")
install.packages("BiocInstaller")
install.packages("BiocParallel")
install.packages("biomaRt")
install.packages("Biostrings")
install.packages("BradleyTerry2")
install.packages("ChangeAnomalyDetection")
install.packages("frbs")
install.packages("gamBoost")
install.packages("GAMBoost")
install.packages("gbm")
install.packages("GenmeInfoDB")
install.packages("GenomicAlignments")
install.packages("GenomicFeatures")
install.packages("GenomicRanges")
install.packages("glmnet")
install.packages("grpreg")
install.packages("H2O")
install.packages("h2o")
install.packages("hflights")
install.packages("IRanges")
install.packages("logicReg")
install.packages("LogicReg")
install.packages("makeslides")
install.packages("mvpart")
install.packages("RSamtools")
install.packages("Rtools")
install.packages("rtracklayer")
install.packages("XVector")
install.packages("yaml")
install.packages("zlibbioc")
installed.packages()
install.packages("manipulate")
install.packages("kernlab")
install.packages("ISLR")
install.packages("GIT")
install.packages("rattle")
install.packages("tree")
shiny::runApp('Courses/DSJH_DataProducts/shiny_example2')
shiny::runApp('Courses/DSJH_DataProducts/shiny_example2')
runApp("C:/Users/Nathalie/Documents/Courses/DSJH_DataProducts/shiny_example3")
shiny::runApp('Courses/DSJH_DataProducts/shiny_example3')
shiny::runApp('Courses/DSJH_DataProducts/shiny_example3')
shiny::runApp('Courses/DSJH_DataProducts/shiny_example3')
shiny::runApp('Courses/DSJH_DataProducts/shiny_example3')
shiny::runApp('Courses/DSJH_DataProducts/shiny_example3')
getwd()
shiny::runApp('Courses/DSJH_DataProducts/shiny_example3')
demo(graphics)
runApp("C:/Users/Nathalie/Documents/Courses/DSJH_DataProducts/shiny_project")
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
plot(density(rnorm(100)^2))
a=rnorm(100,mean=10,sd=1)
b=rnorm(100,mean=13,sd=1)
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
?density()
?density
density(galton$child)
plot(density(galton$child))
hist(galton$child)
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
?plot
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
rnorm(200, mean=.8)
data<-rnorm(200, mean=.8);
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
Probability_Distributions <- ggplot(data, aes(x=rating)) + geom_density()
set.seed(1234)
dat <- data.frame(cond = factor(rep(c("A","B"), each=200)), rating = c(rnorm(200),rnorm(200, mean=.8)))
ggplot(data, aes(x=rating)) + geom_density()
head(dat)
Probability_Distributions <- ggplot(dat, aes(x=rating)) + geom_density()
ggplot(dat, aes(x=rating)) + geom_density()
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
dat_null <- data.frame(cond = factor(rep("A"), each=10000)), mean = c(rnorm(10000),rnorm(10000, mean=0)))
dat_alt <- data.frame(cond = factor(rep(c("B"), each=10000)), mean = c(rnorm(10000),rnorm(10000, mean=1)))
dat_null <- data.frame(cond = factor(rep("A"), 10000)), mean = c(rnorm(10000),rnorm(10000, mean=0)))
dat_null <- data.frame(cond = factor(rep("A"), 10000), mean = c(rnorm(10000),rnorm(10000, mean=0)))
head dat_null
head(dat_null)
?rep
?repdat_null <- data.frame(cond = factor(rep("A", 10000)), mean = c(rnorm(10000),rnorm(10000, mean=0)))
dat_null <- data.frame(cond = factor(rep("A", 10000)), mean = c(rnorm(10000),rnorm(10000, mean=0)))
head(dat_null)
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
dat <- c(dat_null, dat_alt)
head(dat)
head(dat,3)
dat <- rbind(dat_null, dat_alt)
head(dat,3)
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
library(plyr)
cdar <- ddplyr(dat, "cond", summarize, mean.mean=mean(mean))
library(plyr)
cdat <- ddply(dat, "cond", summarize, mean.mean=mean(mean))
head(cdat,4)
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
criterion <- 0.5
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
dat <- data.frame(cond = factor(rep(c("A", "B"), each=10000)), mean = c(rnorm(10000, mean=0),rnorm(10000, mean=5)))
criterion <- 3
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
dat <- data.frame(cond = factor(rep(c("A", "B"), each=10000)), mean = c(rnorm(10000, mean=0),rnorm(10000, mean=4)))
criterion <- 3
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
?geom.area
?geom_area
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
library(plyr) # to access round_any
huron$decade <- round_any(huron$year, 10, floor)
h <- ggplot(huron, aes(x=year))
h + geom_ribbon(aes(ymin=0, ymax=level))
h + geom_ribbon(aes(ymin=level-1, ymax=level+1))
huron[huron$year > 1900 & huron$year < 1910, "level"] <- NA
h <- ggplot(huron, aes(x=year))
h + geom_ribbon(aes(ymin=level-1, ymax=level+1)) + geom_line(aes(y=level))
m <- ggplot(movies, aes(y=votes, x=year))
(m <- m + geom_point())
m + stat_summary(geom="ribbon", fun.ymin="min", fun.ymax="max")
qplot(year, level, data=huron, geom=c("area", "line"))
dat <- data.frame(cond = factor(rep(c("A", "B"), each=10000)), mean = c(rnorm(10000, mean=0),rnorm(10000, mean=2)))
criterion <- 3
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
dat <- data.frame(cond = factor(rep(c("A", "B"), each=10000)), prob_of_mean = c(rnorm(10000, mean=0),rnorm(10000, mean=2)))
criterion <- 3
plot <- ggplot(dat, aes(x=prob_of_mean, colour=cond))
plot <- plot + geom_density()
plot <- plot + geom_vline(aes(xintercept=criterion), color="red", linetype="solid", size=1)
plot <- plot + geom_ribbon(aes(ymin=0, ymax=2))
plot <- plot + geom_area(aes(y=prob_of_mean))
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
dat <- data.frame(cond = factor(rep(c("A", "B"), each=5000)), prob_of_mean = c(rnorm(5000, mean=0),rnorm(5000, mean=2.5)))
criterion <- 2
shiny::runApp('Courses/DSJH_DataProducts/shiny_project')
